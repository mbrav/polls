version: '3.7'

services:
  polls-db:
    container_name: polls-db
    restart: always
    image: postgres:14-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - ${POSTGRES_PORT:-5432}:${POSTGRES_PORT:-5432}
    environment:
      - POSTGRES_SERVER=${POSTGRES_SERVER:-localhost}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U $${POSTGRES_USER:-postgres}"
        ]
      interval: 2s
      timeout: 5s
      retries: 10
    networks:
      - web

  polls-django:
    container_name: polls-django
    build:
      context: .
      dockerfile: docker/polls/Dockerfile
      args:
        - WORKDIR=${WORKDIR:-/app}
    depends_on:
      polls-db:
        condition: service_healthy
    ports:
      - ${API_PORT:-8000}:${API_PORT:-8000}
    environment:
      - WORKDIR=${WORKDIR:-/app}
      - API_PORT=${API_PORT:-8000}
      - API_HOST=${API_HOST:-0.0.0.0}
      - TESTING=${TESTING:-False}
      - DEBUG=${DEBUG:-False}
      - LOGGING=${LOGGING:-True}
      - SECRET_KEY=${SECRET_KEY:-pl3seCh@nGeM3!}
      - API_PATH=${API_PATH:-/api}
      - FIRST_SUPERUSER=${FIRST_SUPERUSER:-admin}
      - FIRST_SUPERUSER_PASSWORD=${FIRST_SUPERUSER_PASSWORD:-password}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-postgres}
      - POSTGRES_SERVER=${POSTGRES_SERVER:-polls-db}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
      - POOL_INTERVAL=${POOL_INTERVAL:-10}
    networks:
      - web
    entrypoint: ./run.sh

networks:
  web:
    driver: bridge

volumes:
  postgres_data:
